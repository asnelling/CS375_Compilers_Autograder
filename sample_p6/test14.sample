# ------------------------- begin Your code -----------------------------
.L0:
	movq	-32(%rbp),%rax     	#  ptr -> %rax
	movq	$0,%rcx         	#  0 -> %rcx
	cmpq	%rcx,%rax           	#  compare %rax - %rcx
	jne	.L2 			#  jump if     !=
	jmp	.L3 			#  jump 
.L2:
	movl	-24(%rbp),%eax     	#  i -> %eax
	movl	$1,%ecx         	#  1 -> %ecx
	addl	%ecx,%eax         	#  %eax + %ecx -> %eax
	movl	%eax,-24(%rbp)     	#  %eax -> i
	jmp	.L0 			#  jump 
.L3:
# ----------------------- begin Epilogue code ---------------------------
	movq	%r9, %rbx        # restore %rbx (callee-saved) from %r9
        leave
        ret
        .cfi_endproc
.LFE0:
        .size   graph1, .-graph1
# ----------------- end Epilogue; Literal data follows ------------------
        .section        .rodata

        .ident  "CS 375 Compiler - Fall 2020"